package com.example.administrator.cloudmusic.adapter.musiclist;

import android.content.Context;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.administrator.cloudmusic.R;
import com.example.administrator.cloudmusic.adapter.QuickAdapter;
import com.example.administrator.cloudmusic.app.JxscApp;
import com.example.administrator.cloudmusic.bean.GroupBean.Play;
import com.example.administrator.cloudmusic.bean.MusicBean.SongList;
import com.example.administrator.cloudmusic.net.HttpManager;
import com.example.administrator.cloudmusic.net.base.Callback;
import com.example.administrator.cloudmusic.net.play.PlayRequest;
import com.example.administrator.cloudmusic.util.DownMP3ClickListener;
import com.example.administrator.cloudmusic.util.ToastUtil;

import java.util.List;

/**
 * Created by ZJ on 2017/3/9 0009.
 * 音乐榜单类型详情
 */
public class MusicListDetailAdapter extends QuickAdapter<SongList> {

    public MusicListDetailAdapter(Context context, int res, List<SongList> data) {
        super(context, res, data);
    }

    @Override
    public View getItemView(int position, View convertView, ViewHolder holder) {
        final SongList songList = data.get(position);
        TextView tvMusicListDetailNum = holder.getView(R.id.tv_music_list_detail_num);
        TextView tvMusicListDetailName = holder.getView(R.id.tv_music_list_detail_name);
        TextView tvMusicListDetailSonger = holder.getView(R.id.tv_music_list_detail_songer);
        final ImageView ivListDetailDownLoad=holder.getView(R.id.iv_music_list_detail_download);//下载
        ImageView ivListDetailCollect=holder.getView(R.id.iv_music_list_detail_collect);//收集

        //String转int
        try {
            if (Integer.parseInt(songList.getRank()) < 10) {
                tvMusicListDetailNum.setText("0" + songList.getRank());
            } else {
                tvMusicListDetailNum.setText(songList.getRank());
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
        ivListDetailDownLoad.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                requestPlay("play",songList.getSong_id(),ivListDetailDownLoad);//发送播放请求，拿到当前歌名的play
            }
        });
        ivListDetailCollect.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ToastUtil.showShort(JxscApp.getContext(), "该功能暂没开放");
            }
        });
        tvMusicListDetailName.setText(songList.getTitle());
        tvMusicListDetailSonger.setText(songList.getAuthor());
        return convertView;
    }

    //播放请求
    private void requestPlay(String method, String songid,final View view) {
        HttpManager.getInstance().addRequestMusic(new PlayRequest(new Callback<Play>() {
            @Override
            public void onReceive(Play play) {
                super.onReceive(play);
                String name = play.getSongInfo().getAuthor();
                new DownMP3ClickListener(play).onClick(view);
            }

            @Override
            public void onError(String error) {

            }
        },method,songid));
    }
}
